#!/bin/bash
# Autor: Luis Juventino Velasquez Hidalgo
# Fecha: 2/19/2023
#   Archivo para mostrar la diferencia entre los tiempos del programa

#SBATCH --nodes=1
#SBATCH --job-name=MPI
#SBATCH --ntasks=16
#SBATCH --time=01:00:00
#SBATCH --partition=general
#SBATCH --constraint=broadwell
#SBATCH --mem-per-cpu=3200

module load intel/oneAPI-2021
#----------------------------------------------------------------------------
#------------------------ Variables de entorno ------------------------------
#----------------------------------------------------------------------------
if [[ $# != 3 ]]
then
    mensaje="Ejecucion con los parametros requeridos en la tarea"
    numero_hilos=16
    tamano_muestra=5000000
    
else
    mensaje=$1  
    tamano_muestra=$2
    numero_hilos=$3
fi


#----------------------------------------------------------------------------
#------------------------ Informacion de ejecucion --------------------------
#----------------------------------------------------------------------------
# El ID  de la corrida es el time stamp
time_stamp=`date +"%d_%m_%Y_%H%M%S"`   
archivo_resultados_qs="rqs_$time_stamp.bin"
archivo_resultados_ms="rms_$time_stamp.bin"
archivo_resultados_hq="rhq_$time_stamp.bin"
archivo_resultados_rs="rrs_$time_stamp.bin"


#Se imprime en pantalla la informacion pertinente
echo "▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒ Iniciando ejecuccion ▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒"
echo " > Bitacora: $mensaje"
echo " > ID de los resultados: $time_stamp"
echo -e "\t•Tamano muesstra: '$tamano_muestra'"
echo -e "\t•Numero de hilos: '$numero_hilos'"
echo -e "\t•Resultados en: '$archivo_resultados_qs'"
echo -e "\t\t: '$archivo_resultados_ms'"
echo -e "\t\t: '$archivo_resultados_hq'"
echo -e "\t\t: '$archivo_resultados_rs'"


#----------------------------------------------------------------------------
#------------------------ Compilacion de archivos ---------------------------
#----------------------------------------------------------------------------
HORA=`date +"%H:%M"`
echo -e "\v======================= Compilando archivos :: $HORA ======================="

echo "_______________ Compilando el archivo secuencial _______________"
mpicc ./secuencial_qs.c -o ejecucion_secuencial.exe
echo -e "----------------------------------------------------------------\n"

echo "__________________ Compilando: paralelo_hq.c ___________________"
mpicc ./paralelo_hq.c -o ejecucion_paralela_hq.exe -lm
echo -e "----------------------------------------------------------------\n"

echo "__________________ Compilando: paralelo_ms.c ___________________"
mpicc ./paralelo_ms.c -o ejecucion_paralela_ms.exe -lm
echo -e "----------------------------------------------------------------\n"

echo "__________________ Compilando: paralelo_rs.c ___________________"
mpicc ./paralelo_rs.c -o ejecucion_paralela_rs.exe -lm
echo -e "----------------------------------------------------------------\n"

echo "________________ Compilando el archivo de datos ________________"
gcc generar_numeros.c -o generar.exe
echo -e "----------------------------------------------------------------\n"


#----------------------------------------------------------------------------
#-------------------------- Ejecucion algoritmos ----------------------------
#----------------------------------------------------------------------------
echo -e "\v > Inicia la corrida de ejecutables"
./generar.exe datos.bin $tamano_muestra

#------------------------------- Secuencial ---------------------------------
HORA=`date +"%H:%M"`
echo "--------------- corrida secuencial :: $HORA ---------------"
./ejecucion_secuencial.exe datos.bin >> $archivo_resultados_qs

#-------------------------------- Paralelo:HQ ---------------------------------
echo "^^^^^^^^^^^^^^^^^^^^ HyperQuickSort ^^^^^^^^^^^^^^^^^^^^^^^"
for i in $(seq 1 4)
do
    np=$((2**$i))
    HORA=`date +"%H:%M"`
    echo "~~~~~~~~~~~~~ Ejecucion con $i hilos :: $HORA ~~~~~~~~~~~~~"
    # Coya mpirun --allow-run-root  --oversubscribe -np=$i ./ejecucion_paralela.exe datos >> $archivo_resultados
    mpirun  -np=$np ./ejecucion_paralela_hq.exe datos.bin >> $archivo_resultados_hq
done

#-------------------------------- Paralelo:RS ---------------------------------
echo "^^^^^^^^^^^^^^^^^^^^^ Regular Sampling ^^^^^^^^^^^^^^^^^^^^^^^^"
for i in $(seq 1 $numero_hilos)
do
    HORA=`date +"%H:%M"`
    echo "~~~~~~~~~~~~~ Ejecucion con $i hilos :: $HORA ~~~~~~~~~~~~~"
    # Coya mpirun --allow-run-root  --oversubscribe -np=$i ./ejecucion_paralela.exe datos >> $archivo_resultados
    mpirun  -np=$i ./ejecucion_paralela_rs.exe datos.bin >> $archivo_resultados_rs
done

#-------------------------------- Paralelo:MS ---------------------------------
echo "^^^^^^^^^^^^^^^^^^^^^^^^ Merge Split ^^^^^^^^^^^^^^^^^^^^^^^^^"
for i in $(seq 1 $numero_hilos)
do
    HORA=`date +"%H:%M"`
    echo "~~~~~~~~~~~~~ Ejecucion con $i hilos :: $HORA ~~~~~~~~~~~~~"
    # Coya mpirun --allow-run-root  --oversubscribe -np=$i ./ejecucion_paralela.exe datos >> $archivo_resultados
    mpirun  -np=$i ./ejecucion_paralela_ms.exe datos.bin >> $archivo_resultados_ms
done

#----------------------------------------------------------------------------
#----------------------------- Fin del archivo ------------------------------
#----------------------------------------------------------------------------
echo -e "░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░ Ejecuccion terminada ░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░"
